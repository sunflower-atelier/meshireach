swagger: "2.0"
info:
  description: "メシリーチサーバーサイドのAPIドキュメントです．"
  version: "0.0.1"
  title: "Meshireach"
  termsOfService: ""
host: "localhost:3000"
basePath: "/"

tags:
- name: "profile"
  description: "ユーザーのプロフィール"

schemes:
- "https"
- "http"

paths:
  /profiles:
    get:
      tags:
      - "profile"
      summary: "プロフィールが存在するか確認"
      description: ""
      operationId: "checkProfile"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Exist"
          schema:
            title: hoge
            type: object
            properties:
              status:
                type: string
                example: Exist
              searchID:
                type: string
                example: (SearchID)
              name:
                type: string
                example: (Name)
              message:
                type: string
                example: (Message)
        404:
          description: "NotExist"
          schema:
            title: hoge
            type: object
            properties:
              status:
                type: string
                example: NotExist
    post:
      tags:
      - "profile"
      summary: "プロフィールを追加"
      description: ""
      operationId: "createProfile"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "追加するユーザーの情報"
        required: true
        schema:
            title: success
            type: object
            properties:
              searchID:
                type: string
                example: "meshi"
              name:
                type: string
                example: "meshi reach"
              message:
                type: string
                example: "yoro"
      responses:
        201:
          description: "Created"
          schema:
            title: success
            type: object
            properties:
              status:
                type: string
                example: "success"
              searchID:
                type: string
                example: "meshi"
              name:
                type: string
                example: "meshi reach"
              message:
                type: string
                example: "yoro"
        400:
          description: "Bad Request"
          schema:
            title: fail
            type: object
            properties:
              status:
                type: string
                example: "fail"
              error:
                type: string
                example: "Search ID is not unique."
    put:
      tags:
      - "profile"
      summary: "プロフィールを編集"
      description: ""
      operationId: "updateProfile"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "編集するユーザーの情報"
        required: true
        schema:
            title: success
            type: object
            properties:
              searchID:
                type: string
                example: "meshi"
              name:
                type: string
                example: "meshi reach"
              message:
                type: string
                example: "yoro"
      responses:
        200:
          description: "OK"
          schema:
            title: success
            type: object
            properties:
              status:
                type: string
                example: "success"
              searchID:
                type: string
                example: "meshimeshi"
              name:
                type: string
                example: "meshi reach"
              message:
                type: string
                example: "yoro"
        400:
          description: "Bad Request"
          schema:
            title: fail
            type: object
            properties:
              status:
                type: string
                example: "fail"
              error:
                type: string
                example: "Search ID is not unique."
                

  /friends:
    post:
      tags:
      - "friends"
      summary: "友達登録する"
      description: ""
      operationId: "RegisterFriends"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "友達になるユーザーのSearchID"
        required: true
        schema:
            title: success
            type: object
            properties:
              searchID:
                type: string
                example: "testuser1"
      responses:
        201:
          description: "友達登録した"
          schema:
            title: hoge
            type: object
            properties:
              status:
                type: string
                example: success
              searchID:
                type: string
                example: (SearchID)
              name:
                type: string
                example: (Name)
              message:
                type: string
                example: (Message)
        400:
          description: "友達になれなかった"
          schema:
            title: hoge
            type: object
            properties:
              status:
                type: string
                example: failure
              error:
                type: string
                example: エラーの理由
    get:
      tags:
      - "friends"
      summary: "全友達情報を取得する"
      description: ""
      operationId: "GetAllFriends"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "取得に成功"
          schema:
            title: hoge
            type: object
            properties:
              status:
                type: string
                example: success
              friends:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "taro"
                    searchID:
                      type: string
                      example: "taro_id"
                    message:
                      type: string
                      example: "hello"
  /events:
    post:
      tags:
      - "events"
      summary: "飯募集を登録する"
      description: ""
      operationId: "register event"
      cosumes: 
      - "application/json"
      produces:
      - "application/json"
      responses:
        201:
          description: "登録成功"
          schema:
            title: hoge
            type: object
            properties:
              status:
                type: string
                example: success
        400:
          description: "登録失敗"
          schema:
            title: hoge
            type: object
            properties:
              status:
                type: string
                example: failure
              error:
                type: string
                example: "error"
  /events/{eventId}:
    get:
      tags:
      - "events"
      summary: "友達の飯情報を取得"
      description: ""
      operationId: "GetAllAttendees"
      produces:
      - "application/json"
      responses:
        200:
          description: "取得に成功"
          schema:
            title: hoge
            type: object
            properties:
              status:
                type: string
                example: "success"
              owner: 
                type: string
                example: "taro"
              title:
                type: string
                example: "event_title"
              deadline:
                type: string
                example: "2019-09-27T14:37:09+09:00"
              friends:
                type: array
                example: []
        400:
          description: "取得に失敗"
          schema:
            title: hoge
            type: object
            properties:
              status:
                type: string
                example: "failure"
              error: 
                type: string
                example: "This event has not be registered."

        
      


securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"

definitions:
  Profile:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      FirebaseID:
        type: "string"
        format: "string"
        example: "gahoehjqorijo1039u4i1nekfdj1"
      SearchID:
        type: "string"
        format: "string"
        description: "ユーザーが使うID"
        example: "meshimeshi"
      Name:
        type: "string"
        example: "群青 ひまわり"
      Message:
        type: "string"
        description: "ひとこと"
        example: "よろしく"
